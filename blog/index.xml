<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blogs on Abed&#39;s Tech Blog</title>
    <link>https://abedef.ca/blog/</link>
    <description>Recent content in Blogs on Abed&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Nov 2022 15:38:51 -0500</lastBuildDate><atom:link href="https://abedef.ca/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing Discord OAuth in NGINX</title>
      <link>https://abedef.ca/blog/nginx-oauth/</link>
      <pubDate>Fri, 18 Nov 2022 15:38:51 -0500</pubDate>
      
      <guid>https://abedef.ca/blog/nginx-oauth/</guid>
      <description>Implementing Discord OAuth2 NGINX using the NJS module
I recently began offloading the authentication and authorization portion of my self-hosted applications to third party services by way of OAuth. This post is about how I implemented the OAuth2 token issuance logic in an application-agnostic manner, fully in NGINX.
If you are not familiar with OAuth, I will demonstrate it below with an example scenario.
Client wishes to authorize their discord credentials to log into example.</description>
    </item>
    
  </channel>
</rss>
